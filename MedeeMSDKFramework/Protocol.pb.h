// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class AdReq;
@class AdReq_Builder;
@class AdResp;
@class AdResp_Builder;
@class App;
@class App_Builder;
@class Campaign;
@class Campaign_Builder;
@class Claim;
@class Claim_Builder;
@class Data;
@class Data_Builder;
@class Device;
@class Device_Builder;
@class Error;
@class Error_Builder;
@class Event;
@class Event_Builder;
@class Geo;
@class Geo_Builder;
@class Init;
@class Init_Builder;
@class Network;
@class Network_Builder;
@class Request;
@class Request_Builder;
@class Response;
@class Response_Builder;
@class Session;
@class SessionData;
@class SessionData_Builder;
@class Session_Builder;
@class User;
@class User_Builder;
typedef enum {
  EVENT_TYPELoadScr = 0,
  EVENT_TYPENewSession = 1,
  EVENT_TYPEEndSession = 2,
  EVENT_TYPEEngagementDisplayed = 3,
  EVENT_TYPEClaimedViaFb = 4,
  EVENT_TYPEClaimedViaEmail = 5,
  EVENT_TYPEClaimed = 6,
  EVENT_TYPEEngagementDismissed = 7,
  EVENT_TYPECustom = 8,
} EVENT_TYPE;

BOOL EVENT_TYPEIsValidValue(EVENT_TYPE value);

typedef enum {
  DeviceOSIos = 0,
  DeviceOSAndroid = 1,
  DeviceOSWp = 2,
  DeviceOSBb10 = 3,
  DeviceOSFfos = 4,
} DeviceOS;

BOOL DeviceOSIsValidValue(DeviceOS value);

typedef enum {
  DeviceTypePhone = 0,
  DeviceTypeTablet = 1,
  DeviceTypePhablet = 2,
} DeviceType;

BOOL DeviceTypeIsValidValue(DeviceType value);

typedef enum {
  AgeGroup1824 = 0,
  AgeGroup2530 = 1,
  AgeGroup3140 = 2,
  AgeGroup4150 = 3,
  AgeGroup50Plus = 4,
  AgeGroupUnderage = 5,
} AgeGroup;

BOOL AgeGroupIsValidValue(AgeGroup value);

typedef enum {
  Response_RespTypeInit = 0,
  Response_RespTypeNewSession = 1,
  Response_RespTypeClaimReward = 2,
  Response_RespTypeReInit = 3,
  Response_RespTypeSessionReport = 4,
} Response_RespType;

BOOL Response_RespTypeIsValidValue(Response_RespType value);

typedef enum {
  Request_ReqTypeInit = 0,
  Request_ReqTypeNewSession = 1,
  Request_ReqTypeClaimReward = 2,
  Request_ReqTypeReInit = 3,
  Request_ReqTypeSessionReport = 4,
} Request_ReqType;

BOOL Request_ReqTypeIsValidValue(Request_ReqType value);

typedef enum {
  Network_SOCIALFb = 0,
  Network_SOCIALTwitter = 1,
  Network_SOCIALLinkedin = 2,
  Network_SOCIALGoogle = 3,
  Network_SOCIALApp = 4,
} Network_SOCIAL;

BOOL Network_SOCIALIsValidValue(Network_SOCIAL value);


@interface ProtocolRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface Response : PBGeneratedMessage {
@private
  BOOL hasAck_:1;
  BOOL hasRewardCode_:1;
  BOOL hasNewSession_:1;
  BOOL hasInitDataResponse_:1;
  BOOL hasError_:1;
  BOOL hasRespType_:1;
  BOOL ack_:1;
  NSString* rewardCode;
  Session* newSession;
  Data* initDataResponse;
  Error* error;
  Response_RespType respType;
  NSMutableArray* mutableCampaignsList;
}
- (BOOL) hasRespType;
- (BOOL) hasNewSession;
- (BOOL) hasInitDataResponse;
- (BOOL) hasRewardCode;
- (BOOL) hasAck;
- (BOOL) hasError;
@property (readonly) Response_RespType respType;
@property (readonly, retain) Session* newSession;
@property (readonly, retain) Data* initDataResponse;
@property (readonly, retain) NSString* rewardCode;
- (BOOL) ack;
@property (readonly, retain) Error* error;
- (NSArray*) campaignsList;
- (Campaign*) campaignsAtIndex:(int32_t) index;

+ (Response*) defaultInstance;
- (Response*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Response_Builder*) builder;
+ (Response_Builder*) builder;
+ (Response_Builder*) builderWithPrototype:(Response*) prototype;

+ (Response*) parseFromData:(NSData*) data;
+ (Response*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Response*) parseFromInputStream:(NSInputStream*) input;
+ (Response*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Response_Builder : PBGeneratedMessage_Builder {
@private
  Response* result;
}

- (Response*) defaultInstance;

- (Response_Builder*) clear;
- (Response_Builder*) clone;

- (Response*) build;
- (Response*) buildPartial;

- (Response_Builder*) mergeFrom:(Response*) other;
- (Response_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Response_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRespType;
- (Response_RespType) respType;
- (Response_Builder*) setRespType:(Response_RespType) value;
- (Response_Builder*) clearRespType;

- (BOOL) hasNewSession;
- (Session*) newSession;
- (Response_Builder*) setNewSession:(Session*) value;
- (Response_Builder*) setNewSessionBuilder:(Session_Builder*) builderForValue;
- (Response_Builder*) mergeNewSession:(Session*) value;
- (Response_Builder*) clearNewSession;

- (BOOL) hasInitDataResponse;
- (Data*) initDataResponse;
- (Response_Builder*) setInitDataResponse:(Data*) value;
- (Response_Builder*) setInitDataResponseBuilder:(Data_Builder*) builderForValue;
- (Response_Builder*) mergeInitDataResponse:(Data*) value;
- (Response_Builder*) clearInitDataResponse;

- (NSArray*) campaignsList;
- (Campaign*) campaignsAtIndex:(int32_t) index;
- (Response_Builder*) replaceCampaignsAtIndex:(int32_t) index with:(Campaign*) value;
- (Response_Builder*) addCampaigns:(Campaign*) value;
- (Response_Builder*) addAllCampaigns:(NSArray*) values;
- (Response_Builder*) clearCampaignsList;

- (BOOL) hasRewardCode;
- (NSString*) rewardCode;
- (Response_Builder*) setRewardCode:(NSString*) value;
- (Response_Builder*) clearRewardCode;

- (BOOL) hasAck;
- (BOOL) ack;
- (Response_Builder*) setAck:(BOOL) value;
- (Response_Builder*) clearAck;

- (BOOL) hasError;
- (Error*) error;
- (Response_Builder*) setError:(Error*) value;
- (Response_Builder*) setErrorBuilder:(Error_Builder*) builderForValue;
- (Response_Builder*) mergeError:(Error*) value;
- (Response_Builder*) clearError;
@end

@interface Request : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasSessionId_:1;
  BOOL hasSession_:1;
  BOOL hasInitData_:1;
  BOOL hasClaim_:1;
  BOOL hasGeo_:1;
  BOOL hasReqType_:1;
  int64_t timestamp;
  NSString* sessionId;
  Session* session;
  Data* initData;
  Claim* claim;
  Geo* geo;
  Request_ReqType reqType;
}
- (BOOL) hasReqType;
- (BOOL) hasSessionId;
- (BOOL) hasTimestamp;
- (BOOL) hasSession;
- (BOOL) hasInitData;
- (BOOL) hasClaim;
- (BOOL) hasGeo;
@property (readonly) Request_ReqType reqType;
@property (readonly, retain) NSString* sessionId;
@property (readonly) int64_t timestamp;
@property (readonly, retain) Session* session;
@property (readonly, retain) Data* initData;
@property (readonly, retain) Claim* claim;
@property (readonly, retain) Geo* geo;

+ (Request*) defaultInstance;
- (Request*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Request_Builder*) builder;
+ (Request_Builder*) builder;
+ (Request_Builder*) builderWithPrototype:(Request*) prototype;

+ (Request*) parseFromData:(NSData*) data;
+ (Request*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Request*) parseFromInputStream:(NSInputStream*) input;
+ (Request*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Request_Builder : PBGeneratedMessage_Builder {
@private
  Request* result;
}

- (Request*) defaultInstance;

- (Request_Builder*) clear;
- (Request_Builder*) clone;

- (Request*) build;
- (Request*) buildPartial;

- (Request_Builder*) mergeFrom:(Request*) other;
- (Request_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Request_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasReqType;
- (Request_ReqType) reqType;
- (Request_Builder*) setReqType:(Request_ReqType) value;
- (Request_Builder*) clearReqType;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (Request_Builder*) setSessionId:(NSString*) value;
- (Request_Builder*) clearSessionId;

- (BOOL) hasTimestamp;
- (int64_t) timestamp;
- (Request_Builder*) setTimestamp:(int64_t) value;
- (Request_Builder*) clearTimestamp;

- (BOOL) hasSession;
- (Session*) session;
- (Request_Builder*) setSession:(Session*) value;
- (Request_Builder*) setSessionBuilder:(Session_Builder*) builderForValue;
- (Request_Builder*) mergeSession:(Session*) value;
- (Request_Builder*) clearSession;

- (BOOL) hasInitData;
- (Data*) initData;
- (Request_Builder*) setInitData:(Data*) value;
- (Request_Builder*) setInitDataBuilder:(Data_Builder*) builderForValue;
- (Request_Builder*) mergeInitData:(Data*) value;
- (Request_Builder*) clearInitData;

- (BOOL) hasClaim;
- (Claim*) claim;
- (Request_Builder*) setClaim:(Claim*) value;
- (Request_Builder*) setClaimBuilder:(Claim_Builder*) builderForValue;
- (Request_Builder*) mergeClaim:(Claim*) value;
- (Request_Builder*) clearClaim;

- (BOOL) hasGeo;
- (Geo*) geo;
- (Request_Builder*) setGeo:(Geo*) value;
- (Request_Builder*) setGeoBuilder:(Geo_Builder*) builderForValue;
- (Request_Builder*) mergeGeo:(Geo*) value;
- (Request_Builder*) clearGeo;
@end

@interface Session : PBGeneratedMessage {
@private
  BOOL hasIsNew_:1;
  BOOL hasStart_:1;
  BOOL hasEnd_:1;
  BOOL hasDuration_:1;
  BOOL hasSessionId_:1;
  BOOL hasUserMedeemId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasOldDeviceId_:1;
  BOOL hasData_:1;
  BOOL isNew_:1;
  int64_t start;
  int64_t end;
  int64_t duration;
  NSString* sessionId;
  NSString* userMedeemId;
  NSString* appKey;
  NSString* deviceId;
  NSString* oldDeviceId;
  Data* data;
  NSMutableArray* mutableEventsList;
}
- (BOOL) hasSessionId;
- (BOOL) hasUserMedeemId;
- (BOOL) hasStart;
- (BOOL) hasEnd;
- (BOOL) hasDuration;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasOldDeviceId;
- (BOOL) hasData;
- (BOOL) hasIsNew;
@property (readonly, retain) NSString* sessionId;
@property (readonly, retain) NSString* userMedeemId;
@property (readonly) int64_t start;
@property (readonly) int64_t end;
@property (readonly) int64_t duration;
@property (readonly, retain) NSString* appKey;
@property (readonly, retain) NSString* deviceId;
@property (readonly, retain) NSString* oldDeviceId;
@property (readonly, retain) Data* data;
- (BOOL) isNew;
- (NSArray*) eventsList;
- (Event*) eventsAtIndex:(int32_t) index;

+ (Session*) defaultInstance;
- (Session*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Session_Builder*) builder;
+ (Session_Builder*) builder;
+ (Session_Builder*) builderWithPrototype:(Session*) prototype;

+ (Session*) parseFromData:(NSData*) data;
+ (Session*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Session*) parseFromInputStream:(NSInputStream*) input;
+ (Session*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Session*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Session*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Session_Builder : PBGeneratedMessage_Builder {
@private
  Session* result;
}

- (Session*) defaultInstance;

- (Session_Builder*) clear;
- (Session_Builder*) clone;

- (Session*) build;
- (Session*) buildPartial;

- (Session_Builder*) mergeFrom:(Session*) other;
- (Session_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Session_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (Session_Builder*) setSessionId:(NSString*) value;
- (Session_Builder*) clearSessionId;

- (BOOL) hasUserMedeemId;
- (NSString*) userMedeemId;
- (Session_Builder*) setUserMedeemId:(NSString*) value;
- (Session_Builder*) clearUserMedeemId;

- (NSArray*) eventsList;
- (Event*) eventsAtIndex:(int32_t) index;
- (Session_Builder*) replaceEventsAtIndex:(int32_t) index with:(Event*) value;
- (Session_Builder*) addEvents:(Event*) value;
- (Session_Builder*) addAllEvents:(NSArray*) values;
- (Session_Builder*) clearEventsList;

- (BOOL) hasStart;
- (int64_t) start;
- (Session_Builder*) setStart:(int64_t) value;
- (Session_Builder*) clearStart;

- (BOOL) hasEnd;
- (int64_t) end;
- (Session_Builder*) setEnd:(int64_t) value;
- (Session_Builder*) clearEnd;

- (BOOL) hasDuration;
- (int64_t) duration;
- (Session_Builder*) setDuration:(int64_t) value;
- (Session_Builder*) clearDuration;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (Session_Builder*) setAppKey:(NSString*) value;
- (Session_Builder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (Session_Builder*) setDeviceId:(NSString*) value;
- (Session_Builder*) clearDeviceId;

- (BOOL) hasOldDeviceId;
- (NSString*) oldDeviceId;
- (Session_Builder*) setOldDeviceId:(NSString*) value;
- (Session_Builder*) clearOldDeviceId;

- (BOOL) hasData;
- (Data*) data;
- (Session_Builder*) setData:(Data*) value;
- (Session_Builder*) setDataBuilder:(Data_Builder*) builderForValue;
- (Session_Builder*) mergeData:(Data*) value;
- (Session_Builder*) clearData;

- (BOOL) hasIsNew;
- (BOOL) isNew;
- (Session_Builder*) setIsNew:(BOOL) value;
- (Session_Builder*) clearIsNew;
@end

@interface Init : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasInitData_:1;
  int64_t timestamp;
  Data* initData;
}
- (BOOL) hasInitData;
- (BOOL) hasTimestamp;
@property (readonly, retain) Data* initData;
@property (readonly) int64_t timestamp;

+ (Init*) defaultInstance;
- (Init*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Init_Builder*) builder;
+ (Init_Builder*) builder;
+ (Init_Builder*) builderWithPrototype:(Init*) prototype;

+ (Init*) parseFromData:(NSData*) data;
+ (Init*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Init*) parseFromInputStream:(NSInputStream*) input;
+ (Init*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Init*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Init*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Init_Builder : PBGeneratedMessage_Builder {
@private
  Init* result;
}

- (Init*) defaultInstance;

- (Init_Builder*) clear;
- (Init_Builder*) clone;

- (Init*) build;
- (Init*) buildPartial;

- (Init_Builder*) mergeFrom:(Init*) other;
- (Init_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Init_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasInitData;
- (Data*) initData;
- (Init_Builder*) setInitData:(Data*) value;
- (Init_Builder*) setInitDataBuilder:(Data_Builder*) builderForValue;
- (Init_Builder*) mergeInitData:(Data*) value;
- (Init_Builder*) clearInitData;

- (BOOL) hasTimestamp;
- (int64_t) timestamp;
- (Init_Builder*) setTimestamp:(int64_t) value;
- (Init_Builder*) clearTimestamp;
@end

@interface AdReq : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  BOOL hasGeo_:1;
  Data* data;
  Geo* geo;
}
- (BOOL) hasData;
- (BOOL) hasGeo;
@property (readonly, retain) Data* data;
@property (readonly, retain) Geo* geo;

+ (AdReq*) defaultInstance;
- (AdReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AdReq_Builder*) builder;
+ (AdReq_Builder*) builder;
+ (AdReq_Builder*) builderWithPrototype:(AdReq*) prototype;

+ (AdReq*) parseFromData:(NSData*) data;
+ (AdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AdReq*) parseFromInputStream:(NSInputStream*) input;
+ (AdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AdReq_Builder : PBGeneratedMessage_Builder {
@private
  AdReq* result;
}

- (AdReq*) defaultInstance;

- (AdReq_Builder*) clear;
- (AdReq_Builder*) clone;

- (AdReq*) build;
- (AdReq*) buildPartial;

- (AdReq_Builder*) mergeFrom:(AdReq*) other;
- (AdReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AdReq_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (Data*) data;
- (AdReq_Builder*) setData:(Data*) value;
- (AdReq_Builder*) setDataBuilder:(Data_Builder*) builderForValue;
- (AdReq_Builder*) mergeData:(Data*) value;
- (AdReq_Builder*) clearData;

- (BOOL) hasGeo;
- (Geo*) geo;
- (AdReq_Builder*) setGeo:(Geo*) value;
- (AdReq_Builder*) setGeoBuilder:(Geo_Builder*) builderForValue;
- (AdReq_Builder*) mergeGeo:(Geo*) value;
- (AdReq_Builder*) clearGeo;
@end

@interface AdResp : PBGeneratedMessage {
@private
  BOOL hasError_:1;
  Error* error;
  NSMutableArray* mutableCampaignsList;
}
- (BOOL) hasError;
@property (readonly, retain) Error* error;
- (NSArray*) campaignsList;
- (Campaign*) campaignsAtIndex:(int32_t) index;

+ (AdResp*) defaultInstance;
- (AdResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AdResp_Builder*) builder;
+ (AdResp_Builder*) builder;
+ (AdResp_Builder*) builderWithPrototype:(AdResp*) prototype;

+ (AdResp*) parseFromData:(NSData*) data;
+ (AdResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AdResp*) parseFromInputStream:(NSInputStream*) input;
+ (AdResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AdResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AdResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AdResp_Builder : PBGeneratedMessage_Builder {
@private
  AdResp* result;
}

- (AdResp*) defaultInstance;

- (AdResp_Builder*) clear;
- (AdResp_Builder*) clone;

- (AdResp*) build;
- (AdResp*) buildPartial;

- (AdResp_Builder*) mergeFrom:(AdResp*) other;
- (AdResp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AdResp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) campaignsList;
- (Campaign*) campaignsAtIndex:(int32_t) index;
- (AdResp_Builder*) replaceCampaignsAtIndex:(int32_t) index with:(Campaign*) value;
- (AdResp_Builder*) addCampaigns:(Campaign*) value;
- (AdResp_Builder*) addAllCampaigns:(NSArray*) values;
- (AdResp_Builder*) clearCampaignsList;

- (BOOL) hasError;
- (Error*) error;
- (AdResp_Builder*) setError:(Error*) value;
- (AdResp_Builder*) setErrorBuilder:(Error_Builder*) builderForValue;
- (AdResp_Builder*) mergeError:(Error*) value;
- (AdResp_Builder*) clearError;
@end

@interface Data : PBGeneratedMessage {
@private
  BOOL hasUser_:1;
  BOOL hasApp_:1;
  BOOL hasDevice_:1;
  User* user;
  App* app;
  Device* device;
}
- (BOOL) hasUser;
- (BOOL) hasApp;
- (BOOL) hasDevice;
@property (readonly, retain) User* user;
@property (readonly, retain) App* app;
@property (readonly, retain) Device* device;

+ (Data*) defaultInstance;
- (Data*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Data_Builder*) builder;
+ (Data_Builder*) builder;
+ (Data_Builder*) builderWithPrototype:(Data*) prototype;

+ (Data*) parseFromData:(NSData*) data;
+ (Data*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Data*) parseFromInputStream:(NSInputStream*) input;
+ (Data*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Data*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Data*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Data_Builder : PBGeneratedMessage_Builder {
@private
  Data* result;
}

- (Data*) defaultInstance;

- (Data_Builder*) clear;
- (Data_Builder*) clone;

- (Data*) build;
- (Data*) buildPartial;

- (Data_Builder*) mergeFrom:(Data*) other;
- (Data_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Data_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUser;
- (User*) user;
- (Data_Builder*) setUser:(User*) value;
- (Data_Builder*) setUserBuilder:(User_Builder*) builderForValue;
- (Data_Builder*) mergeUser:(User*) value;
- (Data_Builder*) clearUser;

- (BOOL) hasApp;
- (App*) app;
- (Data_Builder*) setApp:(App*) value;
- (Data_Builder*) setAppBuilder:(App_Builder*) builderForValue;
- (Data_Builder*) mergeApp:(App*) value;
- (Data_Builder*) clearApp;

- (BOOL) hasDevice;
- (Device*) device;
- (Data_Builder*) setDevice:(Device*) value;
- (Data_Builder*) setDeviceBuilder:(Device_Builder*) builderForValue;
- (Data_Builder*) mergeDevice:(Device*) value;
- (Data_Builder*) clearDevice;
@end

@interface SessionData : PBGeneratedMessage {
@private
  BOOL hasUserMedeemId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasOldDeviceId_:1;
  NSString* userMedeemId;
  NSString* appKey;
  NSString* deviceId;
  NSString* oldDeviceId;
}
- (BOOL) hasUserMedeemId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasOldDeviceId;
@property (readonly, retain) NSString* userMedeemId;
@property (readonly, retain) NSString* appKey;
@property (readonly, retain) NSString* deviceId;
@property (readonly, retain) NSString* oldDeviceId;

+ (SessionData*) defaultInstance;
- (SessionData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SessionData_Builder*) builder;
+ (SessionData_Builder*) builder;
+ (SessionData_Builder*) builderWithPrototype:(SessionData*) prototype;

+ (SessionData*) parseFromData:(NSData*) data;
+ (SessionData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SessionData*) parseFromInputStream:(NSInputStream*) input;
+ (SessionData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SessionData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SessionData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SessionData_Builder : PBGeneratedMessage_Builder {
@private
  SessionData* result;
}

- (SessionData*) defaultInstance;

- (SessionData_Builder*) clear;
- (SessionData_Builder*) clone;

- (SessionData*) build;
- (SessionData*) buildPartial;

- (SessionData_Builder*) mergeFrom:(SessionData*) other;
- (SessionData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SessionData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMedeemId;
- (NSString*) userMedeemId;
- (SessionData_Builder*) setUserMedeemId:(NSString*) value;
- (SessionData_Builder*) clearUserMedeemId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (SessionData_Builder*) setAppKey:(NSString*) value;
- (SessionData_Builder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (SessionData_Builder*) setDeviceId:(NSString*) value;
- (SessionData_Builder*) clearDeviceId;

- (BOOL) hasOldDeviceId;
- (NSString*) oldDeviceId;
- (SessionData_Builder*) setOldDeviceId:(NSString*) value;
- (SessionData_Builder*) clearOldDeviceId;
@end

@interface Claim : PBGeneratedMessage {
@private
  BOOL hasCampaignId_:1;
  BOOL hasUserMedeemId_:1;
  BOOL hasDeviceId_:1;
  BOOL hasAppKey_:1;
  BOOL hasContact_:1;
  NSString* campaignId;
  NSString* userMedeemId;
  NSString* deviceId;
  NSString* appKey;
  Network* contact;
}
- (BOOL) hasCampaignId;
- (BOOL) hasUserMedeemId;
- (BOOL) hasDeviceId;
- (BOOL) hasAppKey;
- (BOOL) hasContact;
@property (readonly, retain) NSString* campaignId;
@property (readonly, retain) NSString* userMedeemId;
@property (readonly, retain) NSString* deviceId;
@property (readonly, retain) NSString* appKey;
@property (readonly, retain) Network* contact;

+ (Claim*) defaultInstance;
- (Claim*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Claim_Builder*) builder;
+ (Claim_Builder*) builder;
+ (Claim_Builder*) builderWithPrototype:(Claim*) prototype;

+ (Claim*) parseFromData:(NSData*) data;
+ (Claim*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Claim*) parseFromInputStream:(NSInputStream*) input;
+ (Claim*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Claim*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Claim*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Claim_Builder : PBGeneratedMessage_Builder {
@private
  Claim* result;
}

- (Claim*) defaultInstance;

- (Claim_Builder*) clear;
- (Claim_Builder*) clone;

- (Claim*) build;
- (Claim*) buildPartial;

- (Claim_Builder*) mergeFrom:(Claim*) other;
- (Claim_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Claim_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCampaignId;
- (NSString*) campaignId;
- (Claim_Builder*) setCampaignId:(NSString*) value;
- (Claim_Builder*) clearCampaignId;

- (BOOL) hasUserMedeemId;
- (NSString*) userMedeemId;
- (Claim_Builder*) setUserMedeemId:(NSString*) value;
- (Claim_Builder*) clearUserMedeemId;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (Claim_Builder*) setDeviceId:(NSString*) value;
- (Claim_Builder*) clearDeviceId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (Claim_Builder*) setAppKey:(NSString*) value;
- (Claim_Builder*) clearAppKey;

- (BOOL) hasContact;
- (Network*) contact;
- (Claim_Builder*) setContact:(Network*) value;
- (Claim_Builder*) setContactBuilder:(Network_Builder*) builderForValue;
- (Claim_Builder*) mergeContact:(Network*) value;
- (Claim_Builder*) clearContact;
@end

@interface Geo : PBGeneratedMessage {
@private
  BOOL hasLat_:1;
  BOOL hasLon_:1;
  BOOL hasIp_:1;
  BOOL hasTz_:1;
  BOOL hasLocale_:1;
  Float64 lat;
  Float64 lon;
  NSString* ip;
  NSString* tz;
  NSString* locale;
}
- (BOOL) hasLat;
- (BOOL) hasLon;
- (BOOL) hasIp;
- (BOOL) hasTz;
- (BOOL) hasLocale;
@property (readonly) Float64 lat;
@property (readonly) Float64 lon;
@property (readonly, retain) NSString* ip;
@property (readonly, retain) NSString* tz;
@property (readonly, retain) NSString* locale;

+ (Geo*) defaultInstance;
- (Geo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Geo_Builder*) builder;
+ (Geo_Builder*) builder;
+ (Geo_Builder*) builderWithPrototype:(Geo*) prototype;

+ (Geo*) parseFromData:(NSData*) data;
+ (Geo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Geo*) parseFromInputStream:(NSInputStream*) input;
+ (Geo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Geo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Geo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Geo_Builder : PBGeneratedMessage_Builder {
@private
  Geo* result;
}

- (Geo*) defaultInstance;

- (Geo_Builder*) clear;
- (Geo_Builder*) clone;

- (Geo*) build;
- (Geo*) buildPartial;

- (Geo_Builder*) mergeFrom:(Geo*) other;
- (Geo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Geo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLat;
- (Float64) lat;
- (Geo_Builder*) setLat:(Float64) value;
- (Geo_Builder*) clearLat;

- (BOOL) hasLon;
- (Float64) lon;
- (Geo_Builder*) setLon:(Float64) value;
- (Geo_Builder*) clearLon;

- (BOOL) hasIp;
- (NSString*) ip;
- (Geo_Builder*) setIp:(NSString*) value;
- (Geo_Builder*) clearIp;

- (BOOL) hasTz;
- (NSString*) tz;
- (Geo_Builder*) setTz:(NSString*) value;
- (Geo_Builder*) clearTz;

- (BOOL) hasLocale;
- (NSString*) locale;
- (Geo_Builder*) setLocale:(NSString*) value;
- (Geo_Builder*) clearLocale;
@end

@interface Event : PBGeneratedMessage {
@private
  BOOL hasStart_:1;
  BOOL hasEnd_:1;
  BOOL hasDuration_:1;
  BOOL hasEventId_:1;
  BOOL hasName_:1;
  BOOL hasJson_:1;
  BOOL hasEventType_:1;
  int64_t start;
  int64_t end;
  int64_t duration;
  NSString* eventId;
  NSString* name;
  NSString* json;
  EVENT_TYPE eventType;
}
- (BOOL) hasEventId;
- (BOOL) hasEventType;
- (BOOL) hasName;
- (BOOL) hasStart;
- (BOOL) hasEnd;
- (BOOL) hasDuration;
- (BOOL) hasJson;
@property (readonly, retain) NSString* eventId;
@property (readonly) EVENT_TYPE eventType;
@property (readonly, retain) NSString* name;
@property (readonly) int64_t start;
@property (readonly) int64_t end;
@property (readonly) int64_t duration;
@property (readonly, retain) NSString* json;

+ (Event*) defaultInstance;
- (Event*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Event_Builder*) builder;
+ (Event_Builder*) builder;
+ (Event_Builder*) builderWithPrototype:(Event*) prototype;

+ (Event*) parseFromData:(NSData*) data;
+ (Event*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Event*) parseFromInputStream:(NSInputStream*) input;
+ (Event*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Event*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Event*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Event_Builder : PBGeneratedMessage_Builder {
@private
  Event* result;
}

- (Event*) defaultInstance;

- (Event_Builder*) clear;
- (Event_Builder*) clone;

- (Event*) build;
- (Event*) buildPartial;

- (Event_Builder*) mergeFrom:(Event*) other;
- (Event_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Event_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventId;
- (NSString*) eventId;
- (Event_Builder*) setEventId:(NSString*) value;
- (Event_Builder*) clearEventId;

- (BOOL) hasEventType;
- (EVENT_TYPE) eventType;
- (Event_Builder*) setEventType:(EVENT_TYPE) value;
- (Event_Builder*) clearEventType;

- (BOOL) hasName;
- (NSString*) name;
- (Event_Builder*) setName:(NSString*) value;
- (Event_Builder*) clearName;

- (BOOL) hasStart;
- (int64_t) start;
- (Event_Builder*) setStart:(int64_t) value;
- (Event_Builder*) clearStart;

- (BOOL) hasEnd;
- (int64_t) end;
- (Event_Builder*) setEnd:(int64_t) value;
- (Event_Builder*) clearEnd;

- (BOOL) hasDuration;
- (int64_t) duration;
- (Event_Builder*) setDuration:(int64_t) value;
- (Event_Builder*) clearDuration;

- (BOOL) hasJson;
- (NSString*) json;
- (Event_Builder*) setJson:(NSString*) value;
- (Event_Builder*) clearJson;
@end

@interface User : PBGeneratedMessage {
@private
  BOOL hasMedeemId_:1;
  BOOL hasPrimaryEmail_:1;
  BOOL hasGender_:1;
  BOOL hasAge_:1;
  NSString* medeemId;
  NSString* primaryEmail;
  NSString* gender;
  AgeGroup age;
  NSMutableArray* mutableOtherEmailsList;
  NSMutableArray* mutableDeviceIdList;
  NSMutableArray* mutableNetworksList;
}
- (BOOL) hasMedeemId;
- (BOOL) hasPrimaryEmail;
- (BOOL) hasGender;
- (BOOL) hasAge;
@property (readonly, retain) NSString* medeemId;
@property (readonly, retain) NSString* primaryEmail;
@property (readonly, retain) NSString* gender;
@property (readonly) AgeGroup age;
- (NSArray*) networksList;
- (Network*) networksAtIndex:(int32_t) index;
- (NSArray*) otherEmailsList;
- (NSString*) otherEmailsAtIndex:(int32_t) index;
- (NSArray*) deviceIdList;
- (NSString*) deviceIdAtIndex:(int32_t) index;

+ (User*) defaultInstance;
- (User*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (User_Builder*) builder;
+ (User_Builder*) builder;
+ (User_Builder*) builderWithPrototype:(User*) prototype;

+ (User*) parseFromData:(NSData*) data;
+ (User*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (User*) parseFromInputStream:(NSInputStream*) input;
+ (User*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (User*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (User*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface User_Builder : PBGeneratedMessage_Builder {
@private
  User* result;
}

- (User*) defaultInstance;

- (User_Builder*) clear;
- (User_Builder*) clone;

- (User*) build;
- (User*) buildPartial;

- (User_Builder*) mergeFrom:(User*) other;
- (User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMedeemId;
- (NSString*) medeemId;
- (User_Builder*) setMedeemId:(NSString*) value;
- (User_Builder*) clearMedeemId;

- (NSArray*) networksList;
- (Network*) networksAtIndex:(int32_t) index;
- (User_Builder*) replaceNetworksAtIndex:(int32_t) index with:(Network*) value;
- (User_Builder*) addNetworks:(Network*) value;
- (User_Builder*) addAllNetworks:(NSArray*) values;
- (User_Builder*) clearNetworksList;

- (BOOL) hasPrimaryEmail;
- (NSString*) primaryEmail;
- (User_Builder*) setPrimaryEmail:(NSString*) value;
- (User_Builder*) clearPrimaryEmail;

- (NSArray*) otherEmailsList;
- (NSString*) otherEmailsAtIndex:(int32_t) index;
- (User_Builder*) replaceOtherEmailsAtIndex:(int32_t) index with:(NSString*) value;
- (User_Builder*) addOtherEmails:(NSString*) value;
- (User_Builder*) addAllOtherEmails:(NSArray*) values;
- (User_Builder*) clearOtherEmailsList;

- (NSArray*) deviceIdList;
- (NSString*) deviceIdAtIndex:(int32_t) index;
- (User_Builder*) replaceDeviceIdAtIndex:(int32_t) index with:(NSString*) value;
- (User_Builder*) addDeviceId:(NSString*) value;
- (User_Builder*) addAllDeviceId:(NSArray*) values;
- (User_Builder*) clearDeviceIdList;

- (BOOL) hasGender;
- (NSString*) gender;
- (User_Builder*) setGender:(NSString*) value;
- (User_Builder*) clearGender;

- (BOOL) hasAge;
- (AgeGroup) age;
- (User_Builder*) setAge:(AgeGroup) value;
- (User_Builder*) clearAge;
@end

@interface App : PBGeneratedMessage {
@private
  BOOL hasAppKey_:1;
  NSString* appKey;
  NSMutableArray* mutableChannelsList;
  NSMutableArray* mutableAgeList;
}
- (BOOL) hasAppKey;
@property (readonly, retain) NSString* appKey;
- (NSArray*) channelsList;
- (NSString*) channelsAtIndex:(int32_t) index;
- (NSArray*) ageList;
- (AgeGroup) ageAtIndex:(int32_t) index;

+ (App*) defaultInstance;
- (App*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (App_Builder*) builder;
+ (App_Builder*) builder;
+ (App_Builder*) builderWithPrototype:(App*) prototype;

+ (App*) parseFromData:(NSData*) data;
+ (App*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (App*) parseFromInputStream:(NSInputStream*) input;
+ (App*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (App*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (App*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface App_Builder : PBGeneratedMessage_Builder {
@private
  App* result;
}

- (App*) defaultInstance;

- (App_Builder*) clear;
- (App_Builder*) clone;

- (App*) build;
- (App*) buildPartial;

- (App_Builder*) mergeFrom:(App*) other;
- (App_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (App_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (App_Builder*) setAppKey:(NSString*) value;
- (App_Builder*) clearAppKey;

- (NSArray*) channelsList;
- (NSString*) channelsAtIndex:(int32_t) index;
- (App_Builder*) replaceChannelsAtIndex:(int32_t) index with:(NSString*) value;
- (App_Builder*) addChannels:(NSString*) value;
- (App_Builder*) addAllChannels:(NSArray*) values;
- (App_Builder*) clearChannelsList;

- (NSArray*) ageList;
- (AgeGroup) ageAtIndex:(int32_t) index;
- (App_Builder*) replaceAgeAtIndex:(int32_t) index with:(AgeGroup) value;
- (App_Builder*) addAge:(AgeGroup) value;
- (App_Builder*) addAllAge:(NSArray*) values;
- (App_Builder*) clearAgeList;
@end

@interface Device : PBGeneratedMessage {
@private
  BOOL hasRetina_:1;
  BOOL hasDensity_:1;
  BOOL hasW_:1;
  BOOL hasH_:1;
  BOOL hasDeviceId_:1;
  BOOL hasOsVersion_:1;
  BOOL hasCarrier_:1;
  BOOL hasMake_:1;
  BOOL hasModel_:1;
  BOOL hasOs_:1;
  BOOL hasType_:1;
  BOOL retina_:1;
  int32_t density;
  int32_t w;
  int32_t h;
  NSString* deviceId;
  NSString* osVersion;
  NSString* carrier;
  NSString* make;
  NSString* model;
  DeviceOS os;
  DeviceType type;
}
- (BOOL) hasDeviceId;
- (BOOL) hasOs;
- (BOOL) hasOsVersion;
- (BOOL) hasType;
- (BOOL) hasCarrier;
- (BOOL) hasMake;
- (BOOL) hasModel;
- (BOOL) hasRetina;
- (BOOL) hasDensity;
- (BOOL) hasW;
- (BOOL) hasH;
@property (readonly, retain) NSString* deviceId;
@property (readonly) DeviceOS os;
@property (readonly, retain) NSString* osVersion;
@property (readonly) DeviceType type;
@property (readonly, retain) NSString* carrier;
@property (readonly, retain) NSString* make;
@property (readonly, retain) NSString* model;
- (BOOL) retina;
@property (readonly) int32_t density;
@property (readonly) int32_t w;
@property (readonly) int32_t h;

+ (Device*) defaultInstance;
- (Device*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Device_Builder*) builder;
+ (Device_Builder*) builder;
+ (Device_Builder*) builderWithPrototype:(Device*) prototype;

+ (Device*) parseFromData:(NSData*) data;
+ (Device*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Device*) parseFromInputStream:(NSInputStream*) input;
+ (Device*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Device*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Device*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Device_Builder : PBGeneratedMessage_Builder {
@private
  Device* result;
}

- (Device*) defaultInstance;

- (Device_Builder*) clear;
- (Device_Builder*) clone;

- (Device*) build;
- (Device*) buildPartial;

- (Device_Builder*) mergeFrom:(Device*) other;
- (Device_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Device_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (Device_Builder*) setDeviceId:(NSString*) value;
- (Device_Builder*) clearDeviceId;

- (BOOL) hasOs;
- (DeviceOS) os;
- (Device_Builder*) setOs:(DeviceOS) value;
- (Device_Builder*) clearOs;

- (BOOL) hasOsVersion;
- (NSString*) osVersion;
- (Device_Builder*) setOsVersion:(NSString*) value;
- (Device_Builder*) clearOsVersion;

- (BOOL) hasType;
- (DeviceType) type;
- (Device_Builder*) setType:(DeviceType) value;
- (Device_Builder*) clearType;

- (BOOL) hasCarrier;
- (NSString*) carrier;
- (Device_Builder*) setCarrier:(NSString*) value;
- (Device_Builder*) clearCarrier;

- (BOOL) hasMake;
- (NSString*) make;
- (Device_Builder*) setMake:(NSString*) value;
- (Device_Builder*) clearMake;

- (BOOL) hasModel;
- (NSString*) model;
- (Device_Builder*) setModel:(NSString*) value;
- (Device_Builder*) clearModel;

- (BOOL) hasRetina;
- (BOOL) retina;
- (Device_Builder*) setRetina:(BOOL) value;
- (Device_Builder*) clearRetina;

- (BOOL) hasDensity;
- (int32_t) density;
- (Device_Builder*) setDensity:(int32_t) value;
- (Device_Builder*) clearDensity;

- (BOOL) hasW;
- (int32_t) w;
- (Device_Builder*) setW:(int32_t) value;
- (Device_Builder*) clearW;

- (BOOL) hasH;
- (int32_t) h;
- (Device_Builder*) setH:(int32_t) value;
- (Device_Builder*) clearH;
@end

@interface Campaign : PBGeneratedMessage {
@private
  BOOL hasCampaignId_:1;
  BOOL hasCreativeUrl_:1;
  BOOL hasTrackingCode_:1;
  NSString* campaignId;
  NSString* creativeUrl;
  NSString* trackingCode;
}
- (BOOL) hasCampaignId;
- (BOOL) hasCreativeUrl;
- (BOOL) hasTrackingCode;
@property (readonly, retain) NSString* campaignId;
@property (readonly, retain) NSString* creativeUrl;
@property (readonly, retain) NSString* trackingCode;

+ (Campaign*) defaultInstance;
- (Campaign*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Campaign_Builder*) builder;
+ (Campaign_Builder*) builder;
+ (Campaign_Builder*) builderWithPrototype:(Campaign*) prototype;

+ (Campaign*) parseFromData:(NSData*) data;
+ (Campaign*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Campaign*) parseFromInputStream:(NSInputStream*) input;
+ (Campaign*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Campaign*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Campaign*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Campaign_Builder : PBGeneratedMessage_Builder {
@private
  Campaign* result;
}

- (Campaign*) defaultInstance;

- (Campaign_Builder*) clear;
- (Campaign_Builder*) clone;

- (Campaign*) build;
- (Campaign*) buildPartial;

- (Campaign_Builder*) mergeFrom:(Campaign*) other;
- (Campaign_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Campaign_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCampaignId;
- (NSString*) campaignId;
- (Campaign_Builder*) setCampaignId:(NSString*) value;
- (Campaign_Builder*) clearCampaignId;

- (BOOL) hasCreativeUrl;
- (NSString*) creativeUrl;
- (Campaign_Builder*) setCreativeUrl:(NSString*) value;
- (Campaign_Builder*) clearCreativeUrl;

- (BOOL) hasTrackingCode;
- (NSString*) trackingCode;
- (Campaign_Builder*) setTrackingCode:(NSString*) value;
- (Campaign_Builder*) clearTrackingCode;
@end

@interface Network : PBGeneratedMessage {
@private
  BOOL hasUsername_:1;
  BOOL hasNetwork_:1;
  NSString* username;
  Network_SOCIAL network;
}
- (BOOL) hasUsername;
- (BOOL) hasNetwork;
@property (readonly, retain) NSString* username;
@property (readonly) Network_SOCIAL network;

+ (Network*) defaultInstance;
- (Network*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Network_Builder*) builder;
+ (Network_Builder*) builder;
+ (Network_Builder*) builderWithPrototype:(Network*) prototype;

+ (Network*) parseFromData:(NSData*) data;
+ (Network*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Network*) parseFromInputStream:(NSInputStream*) input;
+ (Network*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Network*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Network*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Network_Builder : PBGeneratedMessage_Builder {
@private
  Network* result;
}

- (Network*) defaultInstance;

- (Network_Builder*) clear;
- (Network_Builder*) clone;

- (Network*) build;
- (Network*) buildPartial;

- (Network_Builder*) mergeFrom:(Network*) other;
- (Network_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Network_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsername;
- (NSString*) username;
- (Network_Builder*) setUsername:(NSString*) value;
- (Network_Builder*) clearUsername;

- (BOOL) hasNetwork;
- (Network_SOCIAL) network;
- (Network_Builder*) setNetwork:(Network_SOCIAL) value;
- (Network_Builder*) clearNetwork;
@end

@interface Error : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasMessage_:1;
  int32_t code;
  NSString* message;
}
- (BOOL) hasMessage;
- (BOOL) hasCode;
@property (readonly, retain) NSString* message;
@property (readonly) int32_t code;

+ (Error*) defaultInstance;
- (Error*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Error_Builder*) builder;
+ (Error_Builder*) builder;
+ (Error_Builder*) builderWithPrototype:(Error*) prototype;

+ (Error*) parseFromData:(NSData*) data;
+ (Error*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Error*) parseFromInputStream:(NSInputStream*) input;
+ (Error*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Error*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Error*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Error_Builder : PBGeneratedMessage_Builder {
@private
  Error* result;
}

- (Error*) defaultInstance;

- (Error_Builder*) clear;
- (Error_Builder*) clone;

- (Error*) build;
- (Error*) buildPartial;

- (Error_Builder*) mergeFrom:(Error*) other;
- (Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMessage;
- (NSString*) message;
- (Error_Builder*) setMessage:(NSString*) value;
- (Error_Builder*) clearMessage;

- (BOOL) hasCode;
- (int32_t) code;
- (Error_Builder*) setCode:(int32_t) value;
- (Error_Builder*) clearCode;
@end

